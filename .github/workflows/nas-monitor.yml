name: NAS Status Monitor

on:
  schedule:
    # 每30分钟运行一次
    - cron: '*/30 * * * *'
  workflow_dispatch:  # 允许手动触发

env:
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  TG_BOT_TOKEN: '8205509147:AAF0V7WMmTcm1Mb0l_6k0BTjV6M78uPi6TY'
  TG_CHAT_ID: '-1003014622661'
  QYWX_WEBHOOK: 'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=a40aa293-1db3-491b-bac4-d8cbf019e918'

jobs:
  check-nas-status:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 设置Git配置
      run: |
        git config --global user.name "$GIT_USERNAME"
        git config --global user.email "$GIT_EMAIL"

    - name: 检查NAS通知状态
      id: check-notification
      run: |
        # 检查data.json是否存在
        if [ ! -f "data.json" ]; then
          echo "data.json not found"
          exit 1
        fi

        CURRENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%S")
        
        # 使用Python脚本检查通知时间
        NOTIFICATION_TIME=$(python .github/scripts/check_notification.py)

        echo "Notification time: $NOTIFICATION_TIME"
        
        if [ "$NOTIFICATION_TIME" = "NOT_FOUND" ] || [ "$NOTIFICATION_TIME" = "ERROR" ]; then
          echo "status=not_found" >> $GITHUB_OUTPUT
          echo "needs_update=true" >> $GITHUB_OUTPUT
        else
          # 检查是否超过1.5小时
          TIME_DIFF=$(python .github/scripts/check_time_diff.py "$NOTIFICATION_TIME")

          echo "Time difference check: $TIME_DIFF"
          echo "status=exists" >> $GITHUB_OUTPUT
          echo "needs_update=$TIME_DIFF" >> $GITHUB_OUTPUT
        fi

    - name: 更新异常状态
      if: steps.check-notification.outputs.needs_update == 'true'
      run: |
        python .github/scripts/update_nas_status.py

    - name: 发送通知
      if: steps.check-notification.outputs.needs_update == 'true'
      run: |
        # 获取北京时间
        CURRENT_TIME=$(TZ='Asia/Shanghai' date +"%Y-%m-%dT%H:%M:%S")
        
        # 构造通知消息
        MESSAGE="🚨 NAS状态异常警告\n\n🔴 GitHub Action检测到NAS状态异常\n\n📊 检测时间: $CURRENT_TIME (北京时间)\n⚠️ 系统可能已离线，请及时检查\n\n此通知由GitHub Action自动发送"

        echo "发送Telegram通知..."
        curl -s --max-time 10 -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
          -H "Content-Type: application/json" \
          -d "{
            \"chat_id\": \"$TG_CHAT_ID\",
            \"text\": \"$MESSAGE\",
            \"parse_mode\": \"Markdown\"
          }" || echo "Telegram通知发送失败"

        echo "发送企业微信机器人通知..."
        curl -s --max-time 10 -X POST "$QYWX_WEBHOOK" \
          -H "Content-Type: application/json" \
          -d "{
            \"msgtype\": \"text\",
            \"text\": {
              \"content\": \"$MESSAGE\"
            }
          }" || echo "企业微信机器人通知发送失败"

        echo "✅ 所有通知发送完成"

    - name: 配置Git远程仓库认证
      if: steps.check-notification.outputs.needs_update == 'true'
      run: |
        # 获取仓库URL并添加认证信息
        REPO_URL="https://$GIT_USERNAME:$GIT_PASSWORD@github.com/${{ github.repository }}.git"
        git remote set-url origin $REPO_URL

    - name: 提交更改
      if: steps.check-notification.outputs.needs_update == 'true'
      run: |
        git add data.json
        git commit -m "🤖 GitHub Action: 标记NAS状态为异常 [自动检测]"
        git push origin main

    - name: 输出检测结果
      run: |
        echo "📊 NAS状态检测完成"
        echo "🔍 通知状态: ${{ steps.check-notification.outputs.status }}"
        echo "🔄 需要更新: ${{ steps.check-notification.outputs.needs_update }}"
        echo "⏰ 当前时间: $(TZ='Asia/Shanghai' date +'%Y-%m-%dT%H:%M:%S')"